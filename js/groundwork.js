// Generated by CoffeeScript 1.6.1

/*
 *
 *  GroundworkCSS JS by Gary Hepting - https://github.com/groundworkcss/groundwork
 *  
 *  Open source under the BSD License. 
 *
 *  Copyright Â© 2013 Gary Hepting. All rights reserved.
 *
*/


(function() {
  var limitPaginationItems;

  $(document).ready(function() {
    var delay;
    delay = '';
    $('nav > ul > li.menu').on({
      mouseenter: function(e) {
        if ($(window).width() > 768) {
          clearTimeout(delay);
          $('nav > ul > li').removeClass('on');
          $('nav > ul > li > ul').hide();
          return $(this).addClass('on');
        }
      },
      mouseleave: function(e) {
        if ($(window).width() > 768) {
          return delay = setTimeout((function() {
            $('nav > ul > li').removeClass('on');
            return $('nav > ul > li > ul').hide();
          }), 350);
        }
      },
      click: function(e) {
        var $this;
        if ($(window).width() < 768) {
          if ($(e.target).parent('li.menu').size() > 0) {
            $this = $(this);
            $(this).children('ul').slideToggle(300, function() {
              return $this.toggleClass('on');
            });
            e.preventDefault();
            return false;
          }
        }
      },
      tap: function(e) {
        var $this;
        if ($(e.target).parent('li.menu').size() > 0) {
          $this = $(this);
          $(this).children('ul').slideToggle(300, function() {
            return $this.toggleClass('on');
          });
          e.preventDefault();
          return false;
        }
      }
    });
    limitPaginationItems();
    $('.pagination ul > li:not(.next, .prev) a').on('click', (function(e) {
      $('.pagination ul > li:not(.next, .prev)').removeClass('active');
      $(this).parent('li').addClass('active');
      if ($(this).parent('li').hasClass('first')) {
        $('.pagination ul > li.prev').addClass('disabled');
      } else {
        $('.pagination ul > li.prev').removeClass('disabled');
      }
      if ($(this).parent('li').hasClass('last')) {
        $('.pagination ul > li.next').addClass('disabled');
      } else {
        $('.pagination ul > li.next').removeClass('disabled');
      }
      limitPaginationItems();
      e.preventDefault();
      return false;
    }));
    $('.pagination ul > li.prev:not(.disabled)').on('click', (function(e) {
      var el;
      $('.pagination ul > li.next').removeClass('disabled');
      el = $('.pagination ul > li.active');
      if (!el.hasClass('first')) {
        el.removeClass('active');
        el.prev().addClass('active');
        limitPaginationItems();
      }
      if ($('.pagination ul > li.active').hasClass('first')) {
        $(this).addClass('disabled');
      }
      e.preventDefault();
      return false;
    }));
    $('.pagination ul > li.next:not(.disabled)').on('click', (function(e) {
      var el;
      $('.pagination ul > li.prev').removeClass('disabled');
      el = $('.pagination ul > li.active');
      if (!el.hasClass('last')) {
        el.removeClass('active');
        el.next().addClass('active');
        limitPaginationItems();
      }
      if ($('.pagination ul > li.active').hasClass('last')) {
        $(this).addClass('disabled');
      }
      e.preventDefault();
      return false;
    }));
    $('.pagination ul > li.disabled a').on('click', (function(e) {
      e.preventDefault();
      return false;
    }));
    $('.error input, .error textarea, \
     .invalid input, .invalid textarea, \
     input.error, textarea.error, \
     input.invalid, textarea.invalid').on({
      click: function() {
        $(this).focus();
        return $(this).select();
      }
    });
    $('span.select select').each(function() {
      if ($(this).children('option').first().val() === '' && $(this).children('option').first().attr('selected')) {
        return $(this).addClass('unselected');
      } else {
        return $(this).removeClass('unselected');
      }
    });
    $('span.select select').on({
      change: function() {
        if ($(this).children('option').first().val() === '' && $(this).children('option').first().attr('selected')) {
          return $(this).addClass('unselected');
        } else {
          return $(this).removeClass('unselected');
        }
      }
    });
    $('.tabs > ul > li > a').not('.disabled').on('click', function(e) {
      var tabs;
      tabs = $(this).parents('.tabs');
      tabs.find('> ul li a').removeClass('active');
      $(this).addClass('active');
      tabs.children('div').removeClass('active');
      tabs.children($(this).attr('href')).addClass('active');
      e.preventDefault();
      return false;
    });
    $('.responsive').not('table').each(function(index, object) {
      var compression, max, min;
      compression = 10;
      min = 10;
      max = 200;
      compression = parseFloat($(this).attr('data-compression') || compression);
      min = parseFloat($(this).attr('data-min') || min);
      max = parseFloat($(this).attr('data-max') || max);
      return $(object).responsiveText({
        compressor: compression,
        minSize: min,
        maxSize: max
      });
    });
    $('table.responsive').each(function(index, object) {
      var compression, max, min, padding;
      compression = 30;
      min = 8;
      max = 13;
      padding = 0;
      compression = parseFloat($(this).attr('data-compression') || compression);
      min = parseFloat($(this).attr('data-min') || min);
      max = parseFloat($(this).attr('data-max') || max);
      padding = parseFloat($(this).attr('data-padding') || padding);
      return $(object).responsiveTable({
        compressor: compression,
        minSize: min,
        maxSize: max,
        padding: padding
      });
    });
    $('.tooltip[title]').tooltip();
    return $('div.modal').modal();
  });

  $(window).load(function() {
    return $('.slider').orbit();
  });

  $(window).resize(function() {
    return limitPaginationItems();
  });

  limitPaginationItems = function() {
    return $('.pagination ul').each(function() {
      var pagination, visibleItemsWidth, visibleSpace, _results;
      pagination = $(this);
      visibleSpace = pagination.outerWidth() - pagination.children('li.prev').outerWidth() - pagination.children('li.next').outerWidth();
      pagination.children('li').not('.prev, .next, .active').hide();
      visibleItemsWidth = 0;
      pagination.children('li:visible').each(function() {
        return visibleItemsWidth += $(this).outerWidth();
      });
      _results = [];
      while ((visibleItemsWidth + 29) < visibleSpace) {
        pagination.children('li:visible').not('.next').last().next().show();
        visibleItemsWidth = 0;
        pagination.children('li:visible').each(function() {
          return visibleItemsWidth += $(this).outerWidth();
        });
        if ((visibleItemsWidth + 29) <= visibleSpace) {
          pagination.children('li:visible').not('.prev').first().prev().show();
          visibleItemsWidth = 0;
          pagination.children('li:visible').each(function() {
            return visibleItemsWidth += $(this).outerWidth();
          });
        }
        visibleItemsWidth = 0;
        _results.push(pagination.children('li:visible').each(function() {
          return visibleItemsWidth += $(this).outerWidth();
        }));
      }
      return _results;
    });
  };

}).call(this);
